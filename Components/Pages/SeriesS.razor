@page "/Series/{slug?}"
@using Microsoft.AspNetCore.Http.Extensions
@using Microsoft.AspNetCore.Mvc
@inject NavigationManager MyNavigationManager
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.Data.SqlClient
@using Microsoft.EntityFrameworkCore
@using Models
@inject MyDbContext Context
@inject IJSRuntime JSRuntime
@using System.Data


<PageTitle>@(Slug.Replace("-", " ") + " | elmovies.com")</PageTitle>
<HeadContent>

    <meta property="og:title" name="description" content="Download free @Slug.Replace("-"," ") movies online. You can download every type of movie in elmovies.com " />
</HeadContent>


@if (isloading)
{
    <h1>Loading...</h1>
}
else
{
    <main class="homepage-main">
        <nav class="navbar navbar-expand-lg navbar-light bg-white">
            <div class="container py-2 d-flex flex-row flex-nowrap">
                <a class="navbar-brand" href="#">
                    <a href="/">
                        <img class="logo-1 show-on-large" style="width: 198px;" src="../../../assets/s.png" alt="Logo" />
                        <img class="logo-1 hide-on-large" style="width: 47px;" src="../../../assets/foms.png" alt="Logo" />
                    </a>
                </a>
                <div class="navbar-nav flex-grow-1 w-100 justify-content-end">
                    <div class="px-3">
                        <form action="search" class="search-form autocomplete " id="autocomplete" style="max-height: 200px;">
                            <img src="icons/search.svg" alt="">
                            <input name="q" class="autocomplete-input" type="text"
                                   placeholder="Search Your Desired Item here..." value="">
                            <ul class="autocomplete-result-list"></ul>
                            <button type="submit">Search</button>
                        </form>
                    </div>
                </div>
            </div>
        </nav>
        <header>
        </header>
        <!-- End: Header -->
        <div class="sidebar-overlay overlay">
            <div class="w3-sidebar">

                <br><br><br>

                <div class="collection">
                    <div class="collection-item"><a href="trending">Trending</a></div>
                    <div class="collection-item"><a href="latest">Latest</a></div>
                </div>

                <div class="w3-bar-item w3-button">
                    <div class="w3-col">
                        <div class="w3-col s6"></div>
                        <div class="w3-col s6"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="container mt-2">

            <div class="w3-row">
                <div class="w3-col s12">
                    <div class="movie-search">
                        <form id="autocomplete" style="max-height: 200px;">
                            <div class="mt-3">
                                <div class="input-group input-group-merge">
                                    <span class="input-group-text" id="basic-addon-search31"><i class="fa-solid fa-magnifying-glass"></i></span>

                                    <input type="text" class="form-control form-control-lg" placeholder="Search Here..." name="q" value="">
                                    <button class="btn btn-primary" type="submit">Search</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
                @if (sposts.Count == 0)
                {
                    <div class="mb-2">&nbsp;</div>
                    <h3>No Post Found in this category :(</h3>

                }
                else
                {
                    <div class="col-12">
                        <div class="w3-bar mt-2 search-stats">
                            <!-- Center -->
                            <h5 class="fw-semibold mt-5">Category/<b>@Slug</b></h5>
                        </div>
                    </div>
                    <div class="row">
                   
                    <div class="col-12">
                        <div class="row gy-3 movie-grid">
                            @foreach (var post in sposts)
                            {
                                    <div class="col-6 col-md-4 col-lg-2">
                                    <div class="card">
                                        <div class="poster-container">
                                            <a href="../../../w/@post.slug">
                                                <div class="poster-image card-img-top"
                                                     style="background-image: url(@post.img);">
                                                </div>
                                            </a>
                                            <div class="poster-overlay">
                                                <div>
                                                    @post.category
                                                </div>
                                                <a href="../../../w/@post.slug"
                                                   class="primary-bg br-5"
                                                   style="color:#364A63; font-size:15px;padding:5px 10px; transition: 100ms">Watch</a>
                                            </div>
                                        </div>
                                        <div class="p-2">
                                                @*title truncate m-0 fw-semibold*@
                                                <h5 class="m-0"><a class="text-dark" href="../../../w/@post.slug">@post.title</a></h5>
                                            <div class="text-muted">@post.year</div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                    </div>
                    <div class="w3-col">
                        @{
                            string qry = "";
                            var uri = MyNavigationManager.ToAbsoluteUri(MyNavigationManager.Uri);
                            if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("q", out var _code))
                            {
                                qry = Convert.ToString(_code);
                            }
                        }
                        <!-- Start: Pagination -->
                        <div class="pagination text-right">
                            @if (!(1 >= pageindex))
                            {
                                <a href="?page=@(pageindex-1)&q=@qry" class="w3-bar-item dual-image-switch-on-hover">◀</a>
                            }

                            @if (!(totalpage <= pageindex))
                            {
                                <a href="?page=@(pageindex+1)&q=@qry" class="w3-bar-item dual-image-switch-on-hover">▶</a>
                            }
                        </div>
                        <!-- End: Pagination -->
                    </div>
                }


            </div>
        </div>

        <div class="mb-2">&nbsp;</div>
    </main>

}





@code {
    [Parameter]
    public string? Slug { get; set; }
    public int totalpage { get; set; }
    public int pageindex { get; set; }
    public int pagesize { get; set; }
    public string qry { get; set; }

    public bool isloading = false;

    public class spost()
    {
        public string slug;
        public string title;
        public string category;
        public string img;
        public string year;
    }
    List<spost> sposts = new List<spost>();




    private async Task GetSSeries()
    {
        string slug;
        if (Slug == "All Series")
        {
            slug = "";
        }
        else{
            slug = Slug;
        }
        DataSet Ds = new DataSet();
        SqlConnection conn = new SqlConnection(Context.Database.GetConnectionString().ToString());
        conn.Open();
        SqlDataAdapter cmd = new SqlDataAdapter($"Select * from Oexam.azeznexam.vwSeries where category like '%{slug}%' ORDER BY dateinserted desc ", conn);
        cmd.Fill(Ds);
        conn.Close();
        sposts.Clear();
        if (Ds.Tables[0].Rows.Count >= 1)
        {
            for (int i = 0; i < Ds.Tables[0].Rows.Count; i++)
            {
                spost sp = new spost();
                sp.title = Ds.Tables[0].Rows[i]["title"].ToString();
                sp.slug = Ds.Tables[0].Rows[i]["slug"].ToString();
                sp.category = Ds.Tables[0].Rows[i]["category"].ToString();
                sp.img = Ds.Tables[0].Rows[i]["img"].ToString();
                sp.year = Ds.Tables[0].Rows[i]["year"].ToString();

                sposts.Add(sp);
            }

        }

    }
    private async Task GetSSeriesS()
    {
        string slug;
        if (Slug == "All Series")
        {
            slug = "";
        }
        else
        {
            slug = Slug;
        }
        DataSet Ds = new DataSet();
        SqlConnection conn = new SqlConnection(Context.Database.GetConnectionString().ToString());
        conn.Open();
        SqlDataAdapter cmd = new SqlDataAdapter($"Select * from Oexam.azeznexam.vwSeries where category like '%{slug}%' and title like '%{qry}%' ORDER BY dateinserted desc ", conn);
        cmd.Fill(Ds);
        conn.Close();
        sposts.Clear();
        if (Ds.Tables[0].Rows.Count >= 1)
        {
            for (int i = 0; i < Ds.Tables[0].Rows.Count; i++)
            {
                spost sp = new spost();
                sp.title = Ds.Tables[0].Rows[i]["title"].ToString();
                sp.slug = Ds.Tables[0].Rows[i]["slug"].ToString();
                sp.category = Ds.Tables[0].Rows[i]["category"].ToString();
                sp.img = Ds.Tables[0].Rows[i]["img"].ToString();
                sp.year = Ds.Tables[0].Rows[i]["year"].ToString();

                sposts.Add(sp);
            }

        }

    }
    protected override async Task OnInitializedAsync()
    {
        SaveViews.Save($"/Series", HttpContextAccessor, Context);
        if (string.IsNullOrEmpty(Slug))
        {
            Slug = "All Series";
        }
        isloading = true;
       
        await GetSSeries();
        var uri = MyNavigationManager.ToAbsoluteUri(MyNavigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("q", out var _code))
        {
            qry = Convert.ToString(_code);
            SaveViews.Save($"/Series?q={qry}", HttpContextAccessor, Context);

        }
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("page", out var _page))
        {
            pageindex = Convert.ToInt32(_page);

        }
        else
        {
            pageindex = 1;
        }

        if (!string.IsNullOrWhiteSpace(qry))
        {
            await GetSSeriesS();
        }
        pagesize = 12;
        IQueryable<spost> query = sposts.AsQueryable();
        decimal count = query.Count();
        totalpage = (int)Math.Ceiling(count / (int)pagesize);
        query = query.Skip((pageindex - 1) * (int)pagesize).Take((int)pagesize);
        sposts = query.ToList();
        isloading = false;
    }
}
